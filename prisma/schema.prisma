generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model category {
  id          String   @id(map: "PK_9c4e4a89e3674fc9f382d733f03") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String   @unique(map: "UQ_23c05c292c439d77b0de816b500") @db.VarChar(255)
  description String?  @db.VarChar
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now()) @db.Timestamp(6)
  updatedAt   DateTime @default(now()) @db.Timestamp(6)
  task        task[]
}

model task {
  id         String    @id(map: "PK_fb213f79ee45060ba925ecd576e") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title      String    @db.VarChar(255)
  isDone     Boolean   @default(false)
  overdue    Boolean   @default(false)
  dueDate    DateTime? @db.Timestamp(6)
  createdAt  DateTime  @default(now()) @db.Timestamp(6)
  updatedAt  DateTime  @default(now()) @db.Timestamp(6)
  categoryId String?   @db.Uuid
  userId     String?   @db.Uuid
  category   category? @relation(fields: [categoryId], references: [id], onDelete: Cascade, map: "FK_586dfdcae7fab5d9723506049a7")
  user       user?     @relation(fields: [userId], references: [id], onDelete: Cascade, map: "FK_f316d3fe53497d4d8a2957db8b9")
}

model user {
  id          String    @id(map: "PK_cace4a159ff9f2512dd42373760") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String    @db.VarChar(255)
  email       String    @unique(map: "UQ_e12875dfb3b1d92d7d7c5377e22") @db.VarChar(320)
  password    String    @db.VarChar(255)
  avatar      String?   @db.VarChar(255)
  isBanned    Boolean   @default(false)
  banReason   String?   @db.VarChar(255)
  bannedAt    DateTime? @db.Timestamp(6)
  lastLoginAt DateTime? @db.Timestamp(6)
  createdAt   DateTime  @default(now()) @db.Timestamp(6)
  updatedAt   DateTime  @default(now()) @db.Timestamp(6)
  isAdmin     Boolean   @default(false)
  task        task[]
}
